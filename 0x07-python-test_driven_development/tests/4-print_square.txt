import doctest

def print_square(size):
    """
    Print a square of the specified size using a given symbol.
    
    >>> print_square(3)
    ###
    ###
    ###
    
    >>> print_square(2)
    ##
    ##
    
    >>> print_square(0)
    (no output)
    
    If size is not an integer, TypeError is raised.
    >>> print_square('3')
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer
    
    If size is negative, ValueError is raised.
    >>> print_square(-1)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0
    """
    symbol = "#"
    if not isinstance(size, int):
        raise TypeError("size must be an integer")
    if isinstance(size, float) and size < 0:
        raise TypeError("size must be an integer")
    if size < 0:
        raise ValueError("size must be >= 0")
    for i in range(size):
        print("{}".format(symbol * size), end='\n')

doctest.testmod()